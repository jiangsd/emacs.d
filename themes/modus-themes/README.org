* Modus Themes for GNU Emacs
  :PROPERTIES:
  :CUSTOM_ID: h:33bb3c69-f24e-4ca7-a986-06ca8057c63a
  :END:

A package for MELPA will be available either towards the end of October
or early November 2019.

** Overview
   :PROPERTIES:
   :CUSTOM_ID: h:23434236-084c-4e17-8ef4-99aea6da4ade
   :END:

Accessible themes for GNU Emacs.  The contrast ratio between foreground
and background values should always be >= 7:1, which conforms with the
WCAG AAA accessibility standard.  This is the highest standard of this
sort.

/Modus/ consists of two themes, one where dark text is cast on a light
backdrop (Modus Operandi), and another where light text is displayed
against a dark background (Modus Vivendi).

I live demo these themes in [[https://protesilaos.com/code-casts][my Emacs-related screen casts]].

** Face coverage
   :PROPERTIES:
   :CUSTOM_ID: h:a31623b9-bff7-4471-9f07-8afe3fffd2bd
   :END:

This list will be updated to reflect the current state of the project.
The idea is to offer an overview of the /known status/ of all affected
face groups.

*** Full support
	:PROPERTIES:
	:CUSTOM_ID: h:b6170300-446e-48d0-8660-a5946b057998
	:END:

+ anzu
+ avy
+ aw
+ company-mode
+ dired-async
+ dired-subtree
+ diredfl
+ elfeed
+ emms
+ eww
+ fancy-dabbrev
+ flyspell
+ git/magit
+ gnus
+ ido-mode
+ info pages
+ isearch, occur, etc.
+ ivy
+ markdown-mode
+ matching parentheses
+ messages
+ modeline
+ mu4e
+ outline-mode
+ rainbow-delimiters
+ swiper
+ treemacs
+ undo-tree
+ visual-regexp
+ which-key
+ whitespace-mode

*** Partially supported
	:PROPERTIES:
	:CUSTOM_ID: h:867999e4-b1e8-4457-a030-c52250a88876
	:END:

+ org-mode
+ shell script syntax (please confirm)

*** Help needed
	:PROPERTIES:
	:CUSTOM_ID: h:f8f72bdb-bfe9-4d2d-9c91-9436b450ffe0
	:END:

These are face groups that I am aware of but do not know how to access
or do not use.  I generally need to see how a face looks in its context
before assessing its aesthetics.

Use =M-x list-faces-display= to get these.

+ diary
+ epa
+ org-mode (agenda, drawer, document info, formula, latex, schedules…)
+ nobreak-{hyphen,space}
+ smerge
+ speedbar
+ transient-{argument,key,value}…
+ tty-menu
+ vc-{conflict-state,state-base}…

Note that I am not much into =org-mode=, so even though I have taken
care of the base styles, I would need help from Org users.

*** Covered but not styled explicitly
	:PROPERTIES:
	:CUSTOM_ID: h:11e0cad8-77fe-4c97-990c-505fef980695
	:END:

These do not require any extra styles because they are configured to
inherit from some basic faces.  Please confirm.

+ calendar
+ change-log
+ comint
+ bongo
+ log-edit
+ package menu
+ rmail

** Contributing
   :PROPERTIES:
   :CUSTOM_ID: h:97e71bb1-74c7-4d0f-8fde-5d7bd369d867
   :END:

A few tasks you can help me with, sorted from the most probable to the
least likely:

+ Suggest refinements to packages that are covered.
+ Report packages not covered thus far.
+ Report bugs, inconsistencies, shortcomings.
+ Help expand the documentation of covered-but-not-styled packages.
+ Suggest refinements to the colour palette.
+ Help expand this document or any other piece of documentation.
+ Help with development (see next section).

It would be great if your feedback also includes some screenshots, GIFs,
or short videos.  Though this is not a requirement.

Whatever you do, always bear in mind the overarching objective of the
Modus themes: to keep a contrast ratio that is greater or equal to 7:1
between background and foreground colours.

** Development notes and objectives
   :PROPERTIES:
   :CUSTOM_ID: h:c6e8387b-2aa8-430d-89f5-80589d1271e9
   :END:

To test the contrast ratio between two colour values in hexadecimal RGB
notation (of the style =#ffffff=), you can use the online tool provided
[[https://webaim.org/resources/contrastchecker/][by WebAim]], or [[https://gitlab.com/protesilaos/scripts][my own =clr= shell script]] that implements the same formula
(I always use the latter, but am 100% sure that the results are the
same).

Now on to some under-the-hood objectives for the longer term
maintainability of the project:

+ All faces should be defined in a single file, *the template*, since
  the themes use the exact same mappings.  The template will avoid the
  duplication of face coverage/definition across both themes.
+ *The theme files*, Modus Operandi and Modus Vivendi, should only
  define their colour palette.  That is the only group that
  differentiates them.
+ Theme files would thus inherit/source/require the template and pass
  the value of their variables to the relevant constructs.

The design notwithstanding, I would also be interested to improve the
quality of the code, in any way that may be.

** COPYING
   :PROPERTIES:
   :CUSTOM_ID: h:fc5de6dd-4eea-4e08-9abe-b5aced60e2cf
   :END:

The Modus Themes are distributed under the terms of the GNU General
Public License version 3 or, at your choice, any later version.  See the
COPYING file distributed in the [[https://gitlab.com/protesilaos/modus-themes][project's Git repository]].
